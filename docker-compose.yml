version: "3.8"

services:
  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    volumes:
      - ./api:/app
      - /app/node_modules
    ports:
      - "3000:3000"
      - "9229:9229"
    networks:
      - main
    restart: "unless-stopped"
    depends_on:
      - main-db

  ui-web:
    container_name: ui-web
    build:
      context: ./ui-web
      dockerfile: Dockerfile.dev
    volumes:
      - ./ui-web:/app
      - /app/node_modules
    ports:
      - "4000:4000"
      - "9230:9229"
    networks:
      - main
    restart: "unless-stopped"

  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
      - ui-web
    networks:
      - main

  main-db:
    container_name: main-db
    image: postgres:16.4-alpine3.20
    env_file:
      - ./api/.env.db # custom non-root user data
      - ./infra/main-db/.env.db # root user data
    ports:
      - "5432:5432"
    restart: "unless-stopped"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/main-db/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - main

networks:
  main:
    driver: bridge

volumes:
  postgres_data:
